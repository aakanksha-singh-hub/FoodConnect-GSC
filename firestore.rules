rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user has a specific role
    function hasRole(role) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Public data that can be read by anyone
    match /impact/{document=**} {
      allow read: if true;  // Allow public read access
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if true;  // Allow user creation during signup
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }

    // Donations collection
    match /donations/{donationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && hasRole('donor');
      allow update: if isAuthenticated() && (
        // Donors can update their own donations
        (hasRole('donor') && resource.data.donorId == request.auth.uid) ||
        // Recipients can accept donations
        (hasRole('recipient') && request.resource.data.status == 'accepted' && resource.data.status == 'available') ||
        // Volunteers can update status for deliveries
        (hasRole('volunteer') && request.resource.data.status == 'in_transit')
      );
    }

    // Recipients collection
    match /recipients/{recipientId} {
      allow read: if isAuthenticated();
      allow create: if true;  // Allow recipient profile creation during signup
      allow update: if isAuthenticated() && request.auth.uid == recipientId;
    }

    // Pickups collection
    match /pickups/{pickupId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && hasRole('volunteer');
      allow update: if isAuthenticated() && hasRole('volunteer');
    }

    // Allow creation of any document during signup
    match /{document=**} {
      allow create: if true;
      allow read: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
  }
} 